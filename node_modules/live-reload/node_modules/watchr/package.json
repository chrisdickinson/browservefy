{
  "name": "watchr",
  "version": "2.1.6",
  "description": "Better file system watching for Node.js",
  "homepage": "https://github.com/bevry/watchr",
  "keywords": [
    "watching",
    "watch",
    "fswatcher",
    "watchfile",
    "fs"
  ],
  "author": {
    "name": "Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    }
  ],
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    },
    {
      "name": "Casey Foster",
      "url": "https://github.com/caseywebdev"
    },
    {
      "name": "Robson Roberto Souza Peixoto",
      "email": "robsonpeixoto@gmail.com",
      "url": "https://github.com/robsonpeixoto"
    }
  ],
  "bugs": {
    "url": "https://github.com/bevry/watchr/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/bevry/watchr.git"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {
    "bal-util": "1.13.x"
  },
  "devDependencies": {
    "coffee-script": "1.4.x",
    "joe": "1.1.x"
  },
  "directories": {
    "lib": "./out/lib"
  },
  "bin": {
    "watchr": "./bin/watchr"
  },
  "scripts": {
    "test": "node ./out/test/everything.test.js --joe-reporter=console"
  },
  "main": "./out/lib/watchr",
  "readme": "## Watchr; better file system watching for Node.js\n\nWatchr provides a normalised API the file watching APIs of different node versions, nested/recursive file and directory watching, and accurate detailed events for file/directory changes, deletions and creations.\n\nYou install it via `npm istall watchr` and use it via `require('watchr').watch(config)`. Available configuration options are:\n\n- `path` a single path to watch\n- `paths` an array of paths to watch\n- `listener` a single listener to fire when a change occurs\n- `listeners` an array of listeners to fire when a change occurs\n- `next` (optional, defaults to `null`) a completion callback to fire once the watchers have been setup\n- `stat` (optional, defaults to `null`) a file stat object to use for the path, instead of fetching a new one\n- `ignoreHiddenFiles` (optional, defaults to `false`) whether or not to ignored files which filename starts with a `.`\n- `ignorePatterns` (optional, defaults to `false`) whether or not to ignore common undesirable file patterns (e.g. `.svn`, `.git`, `.DS_Store`, `thumbs.db`, etc)\n- `interval` (optional, defaults to `100`) for systems that poll to detect file changes, how often should it poll in millseconds\n- `persistent` (optional, defaults to `true`) whether or not we should keep the node process alive for as long as files are still being watched\n\nListeners will be triggered whenever a change is made on the directory or for anything inside it (including sub-directories and so on) and are in the following format `var listener = function(eventName,filePath,fileCurrentStat,filePreviousStat){}`\n\nThere are three types of events for your listeners at your disposal:\n\n- `change`: a file has been modified\n- `new`: a new file or directory has been created\n- `unlink`: a file or a directory has been removed\n\nTo wrap it all together, it would look like this:\n\n``` javascript\n// Require\nwatchr = require('watchr')\n\n// Watch a directory or file\nwatchr.watch({\n\tpath: path,\n\tlistener: function(eventName,filePath,fileCurrentStat,filePreviousStat){\n\t\tconsole.log('a watch event occured:',arguments);\n\t},\n\tnext: function(err,watcher){\n\t\tif (err)  throw err;\n\t\tconsole.log('watching setup successfully');\n\t}\n});\n```\n\nYou can test the above code snippet by installing watchr globally by running `npm install -g watchr` to install watchr, then `watchr <pathToWatch>` to watchr a particular path, and performing some file system modifications on that path.\n\nThanks for using Watchr!\n\n\n## Support\n\nSupport can be found in the [GitHub Issue Tracker](https://github.com/bevry/watchr/issues)\n\n\n## History\n\nYou can discover the history inside the [History.md](https://github.com/bevry/watchr/blob/master/History.md#files) file\n\n\n## License\n\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright &copy; 2012 [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright &copy; 2011 [Benjamin Lupton](http://balupton.com)",
  "readmeFilename": "README.md",
  "_id": "watchr@2.1.6",
  "dist": {
    "shasum": "164b92b6d94efc69f538c13d8674227de80425b5"
  },
  "_from": "watchr@~2.1.5",
  "_resolved": "https://registry.npmjs.org/watchr/-/watchr-2.1.6.tgz"
}
